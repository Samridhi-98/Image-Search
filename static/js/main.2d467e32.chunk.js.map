{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","spans","setSpans","console","log","imageRef","current","clientHeight","height","Math","ceil","createRef","addEventListener","images","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","map","image","key","id","App","onSearchSubmit","a","axios","get","params","query","headers","Authorization","response","data","results","marginTop","length","Index","ReactDOM","render","document","querySelector"],"mappings":"6RA4BeA,E,4MAxBXC,MAAQ,CAACC,KAAO,I,EAKhBC,aAAe,SAAAC,GACXA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGzB,IAAD,OACL,OACI,yBAAKM,UAAY,cACb,0BAAOD,SAAYE,KAAKN,aAAcK,UAAY,WAClD,yBAAKA,UAAY,SACb,iDACA,2BAAOE,KAAO,OAAQC,MAAOF,KAAKR,MAAMC,KAAMU,SAAW,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACZ,KAAMW,EAAEE,OAAOJ,kB,GAlBxFK,IAAMC,WC+BfC,G,wDA9BX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IAIVL,MAAQ,CAAEkB,MAAO,GALE,EAYnBC,SAAW,WACPC,QAAQC,IAAI,EAAKC,SAASC,QAAQC,cAClC,IAAMC,EAAS,EAAKH,SAASC,QAAQC,aAC/BN,EAAQQ,KAAKC,KAAKF,EAAS,IACjC,EAAKZ,SAAS,CAAEK,WAdhB,EAAKI,SAAWP,IAAMa,YAFP,E,gEAQfpB,KAAKc,SAASC,QAAQM,iBAAiB,OAAQrB,KAAKW,Y,+BAY9C,IAAD,EACyBX,KAAKH,MAAMyB,OAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KACrB,OACI,yBAAKC,MAAS,CAAEC,WAAW,QAAD,OAAU1B,KAAKR,MAAMkB,SAC3C,yBAAKiB,IAAQ3B,KAAKc,SAAWc,IAAQL,EAAcM,IAAQL,EAAKM,e,GAzBxDvB,IAAMC,YCafuB,EAXG,SAAAlC,GACd,IAAMyB,EAASzB,EAAMyB,OAAOU,KAAI,SAAAC,GAE5B,OAAO,kBAAC,EAAD,CAAWC,IAAQD,EAAME,GAChCb,OAAWW,OAIf,OAAO,yBAAKlC,UAAY,cAAjB,IAAkCuB,EAAlC,MCyBIc,E,4MA7BX5C,MAAQ,CAAEyC,MAAO,I,EAEjBI,e,uCAAiB,WAAM5C,GAAN,eAAA6C,EAAA,sEACUC,IAAMC,IAAI,yCAA0C,CACvEC,OAAQ,CAAEC,MAAOjD,GACjBkD,QAAS,CACLC,cAAe,2DAJV,OACPC,EADO,OAQb,EAAKxC,SAAS,CAAE4B,MAAOY,EAASC,KAAKC,UARxB,2C,6GAiBb,OAAS,yBAAKhD,UAAY,eAAe0B,MAAS,CAAEuB,UAAW,SAC3D,kBAAC,EAAD,CAAWlD,SAAaE,KAAKqC,iBADxB,UAEIrC,KAAKR,MAAMyC,MAAMgB,OAFrB,SAIL,kBAAC,EAAD,CAAW3B,OAAWtB,KAAKR,MAAMyC,a,GAzB3B1B,IAAMC,WCFlB0C,EAAQ,WACV,OAAS,6BAEL,kBACA,EADA,QAQRC,IAASC,OAAQ,kBAAE,EAAF,MAAcC,SAASC,cAAc,Y","file":"static/js/main.2d467e32.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    state = {term : ''};\r\n    // onInputChange(event){\r\n    //     console.log(event.target.value);\r\n    // }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div className = \"ui segment\" >\r\n                <form  onSubmit = {this.onFormSubmit} className = \"ui form\" >\r\n                <div className = \"field\" >\r\n                    <label> Image Search </label> \r\n                    <input type = \"text\"  value={this.state.term} onChange= {e => this.setState({term: e.target.value})} />\r\n                </div> \r\n                </form> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n\r\n// Sotiz7CgeN5RYqufsGzDEkTg83dFvFa-wkIrdEVrYBs","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    state = { spans: 0 };\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n        // console.log(this.imageRef.current.clientHeight);\r\n    }\r\n\r\n    setSpans = () => {\r\n        console.log(this.imageRef.current.clientHeight);\r\n        const height = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 10);\r\n        this.setState({ spans });\r\n\r\n    };\r\n\r\n    render() {\r\n        const { description, urls } = this.props.images;\r\n        return ( \r\n            <div style = {{ gridRowEnd: `span ${this.state.spans}` } } >\r\n                <img ref = { this.imageRef } alt = { description } src = { urls.regular }/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import './ImageList.css';\r\nimport React from 'react';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = props => {\r\n    const images = props.images.map(image => {\r\n        // return <img src ={urls.regular} alt={description} key={id} />;\r\n        return <ImageCard key = { image.id }\r\n        images = { image }\r\n        />;\r\n    });\r\n\r\n    return <div className = \"image-list\" > { images } < /div>;\r\n};\r\n\r\nexport default ImageList;","import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar'\r\nimport ImageList from './ImageList';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { image: [] };\r\n\r\n    onSearchSubmit = async(term) => {\r\n        const response = await axios.get('https://api.unsplash.com/search/photos', {\r\n            params: { query: term },\r\n            headers: {\r\n                Authorization: 'Client-ID Sotiz7CgeN5RYqufsGzDEkTg83dFvFa-wkIrdEVrYBs'\r\n            }\r\n        });\r\n\r\n        this.setState({ image: response.data.results });\r\n\r\n        // .then(response => {\r\n        //     console.log(response.data.results);\r\n        // })\r\n        // console.log(term);\r\n    }\r\n\r\n    render() {\r\n        return ( <div className = \"ui container\" style = {{ marginTop: '20px' } } >\r\n            <SearchBar onSubmit = { this.onSearchSubmit }/>\r\n            Found: { this.state.image.length }\r\n            images \r\n            <ImageList images = { this.state.image }/>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\nconst Index = () => {\r\n    return ( <\r\n        div >\r\n        <\r\n        App / >\r\n        <\r\n        /div>   \r\n    );\r\n};\r\n\r\n\r\nReactDOM.render( < Index / > , document.querySelector('#root'));"],"sourceRoot":""}